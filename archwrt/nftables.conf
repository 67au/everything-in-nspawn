#!/usr/bin/nft -f
# vim:set ts=2 sw=2 et:

# IPv4/IPv6 Simple & Safe firewall ruleset.
# More examples in /usr/share/nftables/ and /usr/share/doc/nftables/examples/.

# 配置复制自 openwrt 的 fw4

table inet filter
delete table inet filter

define DEV_LAN = host0
define LAN = { $DEV_LAN }
# 设置三种 wan : wl0(WLAN), eth0(ETH), eth0mv0(ETH MACVLAN)
# 按自己需要来配置需要的
define DEV_WWAN = wl0
define DEV_WAN = eth0
define DEV_MVWAN0 = eth0mv0
define WAN = { $DEV_WAN, $DEV_WWAN, $DEV_MVWAN0 }

table inet filter {
  chain input {
    type filter hook input priority filter; policy accept;
    meta mark and 0x08000000 == 0x08000000 accept comment "use dae"

    ct state invalid drop comment "early drop of invalid connections"
    ct state {established, related} accept comment "allow tracked connections"
    iifname lo accept comment "allow from loopback"
    ip protocol icmp accept comment "allow icmp"
    meta l4proto ipv6-icmp accept comment "allow icmp v6"

    iifname $LAN jump input_lan comment "Handle LAN"
    iifname $WAN jump input_wan comment "Handle WAN"
    jump handle_reject
  }

  chain forward {
    type filter hook forward priority filter; policy drop;
    ct state established,related accept comment "Allow forwarded established and related flows"
    iifname $LAN jump forward_lan comment "Handle LAN"
    iifname $WAN jump forward_wan comment "Handle WAN"
    jump handle_reject
  }

  chain output {
    type filter hook output priority filter; policy accept;
    oifname "lo" accept comment "Accept traffic towards loopback"
    ct state established,related accept comment "Allow outbound established and related flows"
    oifname $LAN jump output_lan comment "Handle LAN"
    oifname $WAN jump output_wan comment "Handle WAN"
  }

  chain syn_flood {
    limit rate 25/second burst 50 packets return comment "Accept SYN packets below rate-limit"
    drop comment "Drop excess packets"
  }

  chain handle_reject {
    meta l4proto tcp reject with tcp reset comment "Reject TCP traffic"
    reject comment "Reject any other traffic"
  }

  # lan
  chain input_lan {
    tcp dport ssh accept comment "allow sshd" 
    jump accept_from_lan
  }

  chain output_lan {
    jump accept_to_lan
  }

  chain forward_lan {
    jump accept_to_wan
    ct status dnat counter accept
    jump accept_to_lan
  }

  chain accept_from_lan {
    iifname $LAN accept comment "accept lan IPv4/IPv6 traffic"
  }

  chain accept_to_lan {
    oifname $LAN accept comment "accept lan IPv4/IPv6 traffic"
  }
  
  # wan
  chain input_wan_base {
    meta nfproto ipv4 udp dport 68  accept comment "Allow-DHCP-Renew"
    icmp type echo-request  accept comment "Allow-Ping"
    meta nfproto ipv6 udp dport 546  accept comment "Allow-DHCPv6"
    ip6 saddr fe80::/10 icmpv6 type . icmpv6 code { mld-listener-query . no-route, mld-listener-report . no-route, mld-listener-done . no-route, mld2-listener-report . no-route }  accept comment "Allow-MLD"
    icmpv6 type { destination-unreachable, time-exceeded, echo-request, echo-reply, nd-router-solicit, nd-router-advert } limit rate 1000/second  accept comment "Allow-ICMPv6-Input"
    icmpv6 type . icmpv6 code { packet-too-big . no-route, parameter-problem . no-route, nd-neighbor-solicit . no-route, nd-neighbor-advert . no-route, parameter-problem . admin-prohibited } limit rate 1000/second  accept comment "Allow-ICMPv6-Input" 
  }

  chain forward_wan_base {
    icmpv6 type { destination-unreachable, time-exceeded, echo-request, echo-reply } limit rate 1000/second accept comment "Allow-ICMPv6-Forward"
    icmpv6 type . icmpv6 code { packet-too-big . no-route, parameter-problem . no-route, parameter-problem . admin-prohibited } limit rate 1000/second accept comment "Allow-ICMPv6-Forward"
    meta l4proto esp jump accept_to_lan comment "Allow-IPSec-ESP"
    udp dport 500 jump accept_to_lan comment "Allow-ISAKMP"
  }

  chain input_wan {
    jump input_wan_base
    ct status dnat counter accept comment "Accept port redirections"
    jump reject_from_wan
  }

  chain output_wan {
    jump accept_to_wan
  }

  chain forward_wan {
    jump forward_wan_base
    ct status dnat counter accept comment "Accept port forwards"
    jump reject_to_wan
  }  

  chain accept_to_wan {
    oifname $WAN ct state invalid drop comment "Prevent NAT leakage"
    oifname $WAN accept comment "accept wan IPv4/IPv6 traffic"
  }
  
  chain reject_from_wan {
    iifname $WAN jump handle_reject comment "reject wan IPv4/IPv6 traffic"
  }

  chain reject_to_wan {
    iifname $WAN jump handle_reject comment "reject wan IPv4/IPv6 traffic"
  }

  # 注释的是配置端口转发的方法，很容易在网上搜索到更详细的用法
  # 例如 下面是将 $LAN 的 10.10.0.2 映射到 $DEV_MVWAN 的 ip 上

  # dstnat
  chain dstnat {
    type nat hook prerouting priority dstnat; policy accept;
    # iifname $DEV_MVWAN meta nfproto ipv4 dnat ip to 10.10.0.2 comment "Port forward"
  }

  # srcnat
  chain srcnat {
    type nat hook postrouting priority srcnat; policy accept;
    # oifname $LAN ip daddr 10.10.0.2 masquerade comment "Port forward"
  }
}
